{
  "properties": {
    "connectionReferences": {
      "shared_onedriveforbusiness_1": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "cr8e1_OneDrivePowerAutomateAdminUtility"
        },
        "api": {
          "name": "shared_onedriveforbusiness"
        }
      },
      "shared_excelonlinebusiness": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "cr8e1_ExcelPowerAutomateAdminUtility"
        },
        "api": {
          "name": "shared_excelonlinebusiness"
        }
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        }
      },
      "triggers": {
        "manual": {
          "metadata": {
            "operationMetadataId": "257308b5-22fb-4461-851c-872c0577323c"
          },
          "type": "Request",
          "kind": "Button",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "title": "Table Name",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "string, 1 word, no whitsepace",
                  "x-ms-content-hint": "TEXT"
                },
                "text_2": {
                  "title": "columns",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Array of strings",
                  "x-ms-content-hint": "TEXT"
                },
                "text_3": {
                  "title": "File Data Uri",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "dataUri( {$content, $content-type} )",
                  "x-ms-content-hint": "TEXT"
                }
              },
              "required": [
                "text",
                "text_2"
              ]
            }
          }
        }
      },
      "actions": {
        "Initialize_variable:_Table_Name": {
          "runAfter": {
            "Compose:_Initialize_Normalized_Trigger_Variables": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "de66e95b-c012-4a08-b37c-e35bf8994193"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Table Name",
                "type": "string",
                "value": "@{trim(triggerBody()['text'])}"
              }
            ]
          },
          "description": "Trigger: Table Name reformatted"
        },
        "Compose:_DEFINITION": {
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "45f39fa3-e6dd-4909-bebb-4839cea5f71c"
          },
          "type": "Compose",
          "inputs": "### Purpose\nChecks a data uri for an Excel table containing the given columns exists. If the table does not exist then one is created. No columns are dropped when changing a table, only added if the columns listed do not exist.¬†\n\n### Input\n**File Data Uri (string) (optional)** - Contents of the Excel file that needs to be validated. If left empty, then the process will use an empty Excel file as reference (add table with columns to an empty file)\n\n**Table Name (string)** - A string representing the table's name.\n\n**Table Columns (String [ ])** - A stringified JSON array of names of columns that the table MUST include in the table. Columns are only added to the table. No columns are removed if they do not exist in the array.\n\n### Outputs\n**Excel File (dataUri)** - The dataUri containing the validated excel content.\n\n**Status Code (Integer)** - The status of the flow on termination.\n 0: Indicates success.\n-1: Invalid Trigger: Table Columns\n-2: indicates an error: could not create temp reference file.\n-3: Cannot Create the Table. The table name may be invalid or the connection used may need to be updated.\n-4: Invalid Trigger File Data Uri\n-5: Not all column names can be added. Some strings in Columns array may be invalid.\n-6: Failure in **üõ†Ô∏è Get Excel Table Columns**\n\n### Dependencies\n**********************Child Flows**********************\nüõ†Ô∏è Get Excel Table Columns\n\n*********Connection References***************\nüîå üõ†Ô∏è PowerAutomate Admin Utility: Excel Connection\nüîå üõ†Ô∏è PowerAutomate Admin Utility: OneDrive Connection"
        },
        "Initialize_variable:_Columns": {
          "runAfter": {
            "Initialize_variable:_Table_Name": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "d722c309-b0ff-4e6e-987f-d770378059d7"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Columns",
                "type": "array",
                "value": []
              }
            ]
          },
          "description": "Trigger: Columns reformatted"
        },
        "Compose:_Initialize_Helper_Variables": {
          "runAfter": {
            "Run_a_Child_Flow": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "d9e42193-a103-4f5e-a7f1-691c89923b6a"
          },
          "type": "Compose",
          "inputs": "Compose: Initialize Helper Variables"
        },
        "Compose:_Initialize_Output_Variables": {
          "runAfter": {
            "Run_a_Child_Flow": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "3a507282-a430-4940-ade9-2bf87fc6c3cf"
          },
          "type": "Compose",
          "inputs": "Compose: Initialize Output Variables"
        },
        "Initialize_variable:_OUTPUT:_File": {
          "runAfter": {
            "Compose:_Initialize_Output_Variables": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "fa8ad5f2-58c8-4826-b80c-94457c204470"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "File",
                "type": "string",
                "value": "@triggerBody()?['text_3']"
              }
            ]
          },
          "description": "OUTPUT. Id of the excel file"
        },
        "Initialize_variable:_OUTPUT:_Status_Code": {
          "runAfter": {
            "Initialize_variable:_OUTPUT:_File": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "5804cd48-21a4-4ac3-ba77-51d379db5960"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Status Code",
                "type": "integer",
                "value": 0
              }
            ]
          },
          "description": "Indicates the state of the flow on termination"
        },
        "Compose:_Initialize_Trigger_Variables": {
          "runAfter": {
            "Run_a_Child_Flow": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "b0b812f6-b2f4-43f8-9611-da72c01c252b"
          },
          "type": "Compose",
          "inputs": "Compose: Initialize Trigger Variables"
        },
        "Initialize_variable:_Trigger:_Table_Name": {
          "runAfter": {
            "Set_variable:_Trigger_-_File_Content_DataUri": [
              "Succeeded",
              "TimedOut",
              "Skipped",
              "Failed"
            ]
          },
          "metadata": {
            "operationMetadataId": "8f4b62a7-62ec-4fa2-b2f6-b9670c8bb2df"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Trigger: Table Name",
                "type": "string",
                "value": "@triggerBody()['text']"
              }
            ]
          },
          "description": "From \"Manually trigger a flow\". Indicates the name of the table in the Excel file to verifiy"
        },
        "Initialize_variable:_Trigger:_Columns": {
          "runAfter": {
            "Initialize_variable:_Trigger:_Table_Name": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "995e6d19-cd55-4cfd-9120-a3fabd7a160e"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Trigger: Columns",
                "type": "string",
                "value": "@triggerBody()['text_2']"
              }
            ]
          },
          "description": "Refers to the 'Columns' variable in 'Manually trigger a flow'. Indicates the columns required in the excel table"
        },
        "Initialize_variable:_Has_Failed": {
          "runAfter": {
            "Compose:_Initialize_Helper_Variables": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "d4705b29-f16f-4dce-a40a-efd65ec6b244"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Has Failed",
                "type": "boolean",
                "value": "@false"
              }
            ]
          },
          "description": "Indicates if the flow has failed"
        },
        "Compose:_Initialize_Normalized_Trigger_Variables": {
          "runAfter": {
            "Initialize_variable:_Trigger:_Columns": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "48c6b2e1-c4d5-428c-b17d-665f1441e085"
          },
          "type": "Compose",
          "inputs": "Compose: Initialize Normalized Trigger Variables"
        },
        "Initialize_variable:_Columns_Fetched_by_GetExcelTableColumns": {
          "runAfter": {
            "Initialize_variable:_Has_Failed": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "76b0dbc4-bff0-48ed-b786-e57438d15458"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Columns Fetched by GetExcelTableColumns",
                "type": "array",
                "value": []
              }
            ]
          },
          "description": "json(outputs('Get_Excel_Table_Columns')?['Body']?['columns'])"
        },
        "Initialize_variable:_Current_Column_Name": {
          "runAfter": {
            "Initialize_variable:_Columns_Fetched_by_GetExcelTableColumns": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "99fc6771-a428-422e-8865-10588b7908ef"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Current Column Name",
                "type": "string",
                "value": " "
              }
            ]
          },
          "description": "Placeholder, In the bellow block we loop through all required column names. This variable represents the coulmn name at the current iteration"
        },
        "Initialize_variable:_Temp_String": {
          "runAfter": {
            "Initialize_variable:_Current_Column_Name": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "3f64599a-d595-469b-924f-ae6453de0d04"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Temp String",
                "type": "string"
              }
            ]
          }
        },
        "Compose:_Initialize_Variables_for_Temp_File_Creation": {
          "runAfter": {
            "Run_a_Child_Flow": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "ce65eb1a-994e-428d-9d02-55e4c409c4b9"
          },
          "type": "Compose",
          "inputs": "Compose: Initialize Variables for Temp File Creation"
        },
        "Initialize_variable:_Path": {
          "runAfter": {
            "Compose:_Initialize_Variables_for_Temp_File_Creation": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "35e9886e-48ab-475d-a759-bf4e8a05ece6"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Path",
                "type": "string",
                "value": "@body('Run_a_Child_Flow')?['temp_folder']"
              }
            ]
          },
          "description": "formatted Path"
        },
        "Respond_to_a_PowerApp_or_flow": {
          "runAfter": {
            "Compose:_OUTPUTS": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "cd799d29-a63f-4f5e-b6ee-539e167795d0"
          },
          "type": "Response",
          "kind": "PowerApp",
          "inputs": {
            "statusCode": 200,
            "body": {
              "excel_file": "@variables('File')",
              "status_code": "@variables('Status Code')"
            },
            "schema": {
              "type": "object",
              "properties": {
                "excel_file": {
                  "title": "Excel File",
                  "x-ms-dynamically-added": true,
                  "type": "string"
                },
                "status_code": {
                  "title": "Status Code",
                  "x-ms-dynamically-added": true,
                  "type": "number"
                }
              }
            }
          }
        },
        "Compose:_OUTPUTS": {
          "runAfter": {
            "Scope:_Get_Contents_and_Delete_Ref_File": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "820b6fcd-cb14-47ee-9bd0-012d5bd6b8e5"
          },
          "type": "Compose",
          "inputs": "File: @{variables('File')}\nStatus: @{variables('Status Code')}"
        },
        "Scope:_Try_Get_Table_Columns": {
          "actions": {
            "Condition:_Status_Code_is_0": {
              "actions": {
                "Set_variable:_Columns_Fetched_by_GetExcelTableColumns": {
                  "runAfter": {
                    "Set_variable:_Status_Code_=_-6": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "35d9c49f-93f1-4c13-8dad-d7fe218e4141"
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "Columns Fetched by GetExcelTableColumns",
                    "value": "@json(outputs('Get_Excel_Table_Columns')?['Body']?['columns'])"
                  }
                },
                "Get_Excel_Table_Columns": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "76e216c4-b799-4712-9a15-9876c1f88417"
                  },
                  "type": "Workflow",
                  "inputs": {
                    "host": {
                      "workflowReferenceName": "6ca4f78d-92f8-ec11-82e5-0022486da39f"
                    },
                    "body": {
                      "text_4": "@variables('Table Name')",
                      "text": "@variables('File Data Uri')"
                    }
                  }
                },
                "Set_variable:_Status_Code_=_-6": {
                  "runAfter": {
                    "Get_Excel_Table_Columns": [
                      "Failed"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "a9831805-63ac-4e50-9590-705788e00524"
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "Status Code",
                    "value": -6
                  }
                }
              },
              "runAfter": {},
              "expression": {
                "equals": [
                  "@variables('Status Code')",
                  0
                ]
              },
              "metadata": {
                "operationMetadataId": "8b30475c-544b-4816-8f15-79774a0cefd2"
              },
              "type": "If"
            }
          },
          "runAfter": {
            "Scope:_Ensure_that_trigger_inputs_are_valid": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "1bc60eac-4fde-4e93-8773-2ff55743cdb1"
          },
          "type": "Scope"
        },
        "Scope:_Ensure_that_trigger_inputs_are_valid": {
          "actions": {
            "Compose:_NOTE_on_trigger_variables": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "05259ee1-3b6f-4e7a-857c-5b68b1f9750c"
              },
              "type": "Compose",
              "inputs": "The validity of trigger variables \n- Path\n- File Name\n- Table Name\nare checked in the child flow \"Get Excel Table Columns\" so we will not verifiy them once again in this flow. "
            },
            "Scope:_Check_that_Columns_is_valid": {
              "actions": {
                "Set_variable:_Attempt_to_apply_'Trigger:_Columns'_value_to_Columns": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "3fb3933a-0fc5-4aed-8b2f-7351a55f8043"
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "Columns",
                    "value": "@json(variables('Trigger: Columns'))"
                  }
                },
                "Compose:_Check_that_Columns_is_an_array_of_strings": {
                  "runAfter": {
                    "Set_variable:_Status_Code_=_-1,_Invlaid_Columns": [
                      "Skipped"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "5bf931a1-5353-4c85-8359-c6172c13f21a"
                  },
                  "type": "Compose",
                  "inputs": "@toLower(if(empty(variables('Columns')),' ',first(variables('Columns'))))",
                  "description": "toLower(if(empty(variables('Columns')),' ',first(variables('Columns'))))"
                },
                "Set_variable:_Status_Code_=_-1,_Invlaid_Columns": {
                  "runAfter": {
                    "Set_variable:_Attempt_to_apply_'Trigger:_Columns'_value_to_Columns": [
                      "Failed"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "8e756e24-10fa-45c7-a78e-a6efba88215b"
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "Status Code",
                    "value": -1
                  }
                },
                "Set_variable:_Status_Code_=_-1_(2)_Invalid_Columns": {
                  "runAfter": {
                    "Compose:_Check_that_Columns_is_an_array_of_strings": [
                      "Failed"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "8def48b8-e18f-46f3-8669-b36da17de813"
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "Status Code",
                    "value": -1
                  }
                }
              },
              "runAfter": {
                "Compose:_NOTE_on_trigger_variables": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "668da6ef-7e24-4234-9efe-84526010a283"
              },
              "type": "Scope"
            }
          },
          "runAfter": {
            "Initialize_variable:_OUTPUT:_Status_Code": [
              "Succeeded"
            ],
            "Initialize_variable:_Columns": [
              "Succeeded"
            ],
            "Initialize_variable:_File_ID": [
              "Succeeded"
            ],
            "Initialize_variable:_Default_Data_Uri": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "76c666ea-b26a-4a9b-b2fa-6f7790d28954"
          },
          "type": "Scope"
        },
        "Initialize_variable:_Trigger_-_File_Content_DataUri": {
          "runAfter": {
            "Compose:_Initialize_Trigger_Variables": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "eaf68787-995a-4ef1-8785-4bd285d25112"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "File Data Uri",
                "type": "string",
                "value": " "
              }
            ]
          }
        },
        "Convert_time_zone": {
          "runAfter": {
            "Current_time": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "01337405-ac8f-4c78-bb9c-6a6ba40a1fdc"
          },
          "type": "Expression",
          "kind": "ConvertTimeZone",
          "inputs": {
            "baseTime": "@body('Current_time')",
            "formatString": "ddMMyyyy_HHmmssfffffff",
            "sourceTimeZone": "UTC-11",
            "destinationTimeZone": "Eastern Standard Time"
          }
        },
        "Current_time": {
          "runAfter": {
            "Initialize_variable:_Path": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "fa031665-8074-4ffb-8c5f-82eee8a43654"
          },
          "type": "Expression",
          "kind": "CurrentTime",
          "inputs": {}
        },
        "Initialize_variable:_Temp_File_Name": {
          "runAfter": {
            "Convert_time_zone": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "196de7d8-52a0-4026-aa22-efab39f01044"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Temp File Name",
                "type": "string",
                "value": "@{body('Convert_time_zone')}_EsnureValidTable.xlsx"
              }
            ]
          },
          "description": "Formatted Trigger: File Name. "
        },
        "Initialize_variable:_File_ID": {
          "runAfter": {
            "Initialize_variable:_Temp_File_Name": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "50173d19-59b5-4186-90b1-8d8a5af3f50e"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "File ID",
                "type": "string",
                "value": " "
              }
            ]
          }
        },
        "Condition:_Get_Table_Columns_Succeded": {
          "actions": {
            "Compose:_Failure_in_Get_Excel_Table_Columns,_-1,_-2": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "99a7e8b3-8ac7-44e2-b221-e0e0330a7286"
              },
              "type": "Compose",
              "inputs": "Failure in Get Prop Names\nStatus Code = -6: Failure in Get Excel table Columns"
            },
            "Set_variable:_Status_Code_=_-6,_-4_if_Get_Table_Cols_is_-5": {
              "runAfter": {
                "Compose:_Failure_in_Get_Excel_Table_Columns,_-1,_-2": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "6a383cbe-d2d3-4b50-b1b4-0f627964a6a9"
              },
              "type": "SetVariable",
              "inputs": {
                "name": "Status Code",
                "value": "@if(equals(int(outputs('Get_Excel_Table_Columns')?['Body']?['status']),-5),-4,-6)"
              }
            }
          },
          "runAfter": {
            "Scope:_Try_Get_Table_Columns": [
              "Succeeded"
            ]
          },
          "expression": {
            "and": [
              {
                "or": [
                  {
                    "equals": [
                      "@int(outputs('Get_Excel_Table_Columns')?['Body']?['status'])",
                      -1
                    ]
                  },
                  {
                    "equals": [
                      "@int(outputs('Get_Excel_Table_Columns')?['Body']?['status'])",
                      -2
                    ]
                  }
                ]
              },
              {
                "equals": [
                  "@variables('Status Code')",
                  0
                ]
              }
            ]
          },
          "metadata": {
            "operationMetadataId": "d439c667-a8a8-4be4-991b-a84ca2ebffa4"
          },
          "type": "If"
        },
        "Scope:_Create_Temp_Reference_File": {
          "actions": {
            "Condition:_Status_Code_is_equal_to_zero": {
              "actions": {
                "Set_variable:_File_ID": {
                  "runAfter": {
                    "Set_variable:_Status_Code_=_-2": [
                      "Succeeded",
                      "TimedOut",
                      "Failed",
                      "Skipped"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "c4d694dd-3f4f-4863-b897-d9f126f2c1f0"
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "File ID",
                    "value": "@outputs('Create_file:_Temp_File')?['body/Id']"
                  }
                },
                "Create_file:_Temp_File": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "09cf2d15-cb55-4037-9235-2637479cb493"
                  },
                  "type": "OpenApiConnection",
                  "inputs": {
                    "host": {
                      "connectionName": "shared_onedriveforbusiness_1",
                      "operationId": "CreateFile",
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_onedriveforbusiness"
                    },
                    "parameters": {
                      "folderPath": "@variables('Path')",
                      "name": "@variables('Temp File Name')",
                      "body": "@decodeDataUri(variables('File Data Uri'))"
                    },
                    "authentication": {
                      "type": "Raw",
                      "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                    }
                  },
                  "runtimeConfiguration": {
                    "contentTransfer": {
                      "transferMode": "Chunked"
                    }
                  }
                },
                "Set_variable:_Status_Code_=_-2": {
                  "runAfter": {
                    "Create_file:_Temp_File": [
                      "Failed"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "a9096bf7-c239-4bba-bb6c-5f4b4d48d5df"
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "Status Code",
                    "value": -2
                  }
                }
              },
              "runAfter": {},
              "expression": {
                "equals": [
                  "@variables('Status Code')",
                  0
                ]
              },
              "metadata": {
                "operationMetadataId": "91eb403a-b5d3-4bf3-a970-bb220e9fe1b3"
              },
              "type": "If"
            }
          },
          "runAfter": {
            "Condition:_Data_Uri_is_invalid,_create_a_default_excel_file": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "c6f86a54-59de-4263-8bce-d43f5746c374"
          },
          "type": "Scope"
        },
        "Condition:_Validate_Table_if_Status_Code_is_0": {
          "actions": {
            "Condition:_No_Table_then_create_one,_otherwise_check_cols": {
              "actions": {
                "Compose;_In_case_Status_Code_=-3,_then_create_the_table_with_columns": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "2f1d6d44-b5aa-46eb-8699-935f5cedb56c"
                  },
                  "type": "Compose",
                  "inputs": "Compose; In case Status Code =-3, then create the table with columns\nreturn sttatus code =-3 on failure"
                },
                "Create_table": {
                  "runAfter": {
                    "Compose;_In_case_Status_Code_=-3,_then_create_the_table_with_columns": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "e3acbf83-c5ce-4dfe-a377-98d8b114693b",
                    "tableId": null
                  },
                  "type": "OpenApiConnection",
                  "inputs": {
                    "host": {
                      "connectionName": "shared_excelonlinebusiness",
                      "operationId": "CreateTable",
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_excelonlinebusiness"
                    },
                    "parameters": {
                      "source": "me",
                      "drive": "b!nuSvKpLRikaqjcYcJ1Y9_sYDHGllwJpBu8upwX1MNGwmguHn2bveTLbY3nz98PGD",
                      "file": "@variables('File ID')",
                      "table/Range": "A1:A2",
                      "table/TableName": "@variables('Table Name')",
                      "table/ColumnsNames": "@join(variables('Columns'),';')"
                    },
                    "authentication": {
                      "type": "Raw",
                      "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                    },
                    "retryPolicy": {
                      "type": "none"
                    }
                  },
                  "description": "join(variables('Columns'),';')"
                },
                "Set_variable:_Status_Code_=_-3": {
                  "runAfter": {
                    "Scope:_Retry": [
                      "Failed"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "b65e2220-48b5-4d1c-9d62-9160dfa6344c"
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "Status Code",
                    "value": -3
                  }
                },
                "Scope:_Retry": {
                  "actions": {
                    "Set_variable:_File_Data_Uri": {
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "64eb649f-938c-4e4b-9775-a44d1b0fec2f"
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "File Data Uri",
                        "value": "@variables('Default Data Uri')"
                      }
                    },
                    "Scope:_Create_Temp_Reference_File_2": {
                      "actions": {
                        "Condition:_Status_Code_is_equal_to_zero_2": {
                          "actions": {
                            "Set_variable:_File_ID_2": {
                              "runAfter": {
                                "Set_variable:_Status_Code_=_-2_2": [
                                  "Succeeded",
                                  "TimedOut",
                                  "Failed",
                                  "Skipped"
                                ]
                              },
                              "metadata": {
                                "operationMetadataId": "c4d694dd-3f4f-4863-b897-d9f126f2c1f0"
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "File ID",
                                "value": "@outputs('Create_file:_Temp_File_2')?['body/Id']"
                              }
                            },
                            "Create_file:_Temp_File_2": {
                              "runAfter": {},
                              "metadata": {
                                "operationMetadataId": "09cf2d15-cb55-4037-9235-2637479cb493"
                              },
                              "type": "OpenApiConnection",
                              "inputs": {
                                "host": {
                                  "connectionName": "shared_onedriveforbusiness_1",
                                  "operationId": "CreateFile",
                                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_onedriveforbusiness"
                                },
                                "parameters": {
                                  "folderPath": "@variables('Path')",
                                  "name": "@variables('Temp File Name')",
                                  "body": "@decodeDataUri(variables('File Data Uri'))"
                                },
                                "authentication": {
                                  "type": "Raw",
                                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                                }
                              },
                              "runtimeConfiguration": {
                                "contentTransfer": {
                                  "transferMode": "Chunked"
                                }
                              }
                            },
                            "Set_variable:_Status_Code_=_-2_2": {
                              "runAfter": {
                                "Create_file:_Temp_File_2": [
                                  "Failed"
                                ]
                              },
                              "metadata": {
                                "operationMetadataId": "a9096bf7-c239-4bba-bb6c-5f4b4d48d5df"
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Status Code",
                                "value": -2
                              }
                            }
                          },
                          "runAfter": {},
                          "expression": {
                            "equals": [
                              "@variables('Status Code')",
                              0
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "91eb403a-b5d3-4bf3-a970-bb220e9fe1b3"
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {
                        "Set_variable:_File_=_default_data_uri": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "c6f86a54-59de-4263-8bce-d43f5746c374"
                      },
                      "type": "Scope"
                    },
                    "Set_variable:_File_=_default_data_uri": {
                      "runAfter": {
                        "Set_variable:_File_Data_Uri": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "b769ee10-d831-473d-865f-ee5cb8c6e16d"
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "File",
                        "value": "@variables('Default Data Uri')"
                      }
                    },
                    "Create_table_2": {
                      "runAfter": {
                        "Scope:_Create_Temp_Reference_File_2": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "e3acbf83-c5ce-4dfe-a377-98d8b114693b",
                        "tableId": null
                      },
                      "type": "OpenApiConnection",
                      "inputs": {
                        "host": {
                          "connectionName": "shared_excelonlinebusiness",
                          "operationId": "CreateTable",
                          "apiId": "/providers/Microsoft.PowerApps/apis/shared_excelonlinebusiness"
                        },
                        "parameters": {
                          "source": "me",
                          "drive": "b!nuSvKpLRikaqjcYcJ1Y9_sYDHGllwJpBu8upwX1MNGwmguHn2bveTLbY3nz98PGD",
                          "file": "@variables('File ID')",
                          "table/Range": "A1:A2",
                          "table/TableName": "@variables('Table Name')",
                          "table/ColumnsNames": "@join(variables('Columns'), ';')"
                        },
                        "authentication": {
                          "type": "Raw",
                          "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                        }
                      },
                      "description": "join(variables('Columns'),';')"
                    }
                  },
                  "runAfter": {
                    "Create_table": [
                      "Failed"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "37d3fff3-a7d3-45a7-8e63-2debabff879e"
                  },
                  "type": "Scope"
                }
              },
              "runAfter": {},
              "else": {
                "actions": {
                  "Compose:_In_case_Status_Code_=_0,_Check_that_the_provided_and_actual": {
                    "runAfter": {},
                    "metadata": {
                      "operationMetadataId": "169497b5-37b7-4026-a9ff-7389dd66827f"
                    },
                    "type": "Compose",
                    "inputs": "Compose: In case Status Code = 0, Check that the provided and actual columns are equal. If any are missing, then add the columns\nprovide status code =-5 on error"
                  },
                  "Compose:_Table_is_empty,_cannot_check_columns": {
                    "runAfter": {
                      "Compose:_In_case_Status_Code_=_0,_Check_that_the_provided_and_actual": [
                        "Succeeded"
                      ]
                    },
                    "metadata": {
                      "operationMetadataId": "6a1f49b3-aa3d-49ce-b7d3-55365d1dee71"
                    },
                    "type": "Compose",
                    "inputs": "Compose: Table is empty, cannot check columns\nTry adding columns to table, if they are already there, try add will return status code 409"
                  },
                  "Apply_to_each:_Column_in_Columns_(Input_of_Required_Columns)": {
                    "foreach": "@variables('Columns')",
                    "actions": {
                      "Condition:_Add_Key_Column_returns_status_200_(OK)_or_409_(Column_already_exists)": {
                        "actions": {},
                        "runAfter": {
                          "Compose:_Preview_Status_Code": [
                            "Succeeded"
                          ]
                        },
                        "else": {
                          "actions": {
                            "Set_variable:_Status_Code_=_-5,_Reason:_Not_all_column_can_be_verified": {
                              "runAfter": {},
                              "metadata": {
                                "operationMetadataId": "569abc7b-613e-4a8d-9405-74346f1e263a"
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Status Code",
                                "value": -5
                              }
                            },
                            "Compose:_NOTE_on_add_a_column_to_table_failure": {
                              "runAfter": {
                                "Set_variable:_Status_Code_=_-5,_Reason:_Not_all_column_can_be_verified": [
                                  "Succeeded"
                                ]
                              },
                              "metadata": {
                                "operationMetadataId": "dfbb5dc9-6ac8-4d55-a114-88cf4e7bec36"
                              },
                              "type": "Compose",
                              "inputs": "above action failed. The column name must have been invalid. We will not terminiate though as there are still more columns to verifiy that may not be invalid."
                            }
                          }
                        },
                        "expression": {
                          "or": [
                            {
                              "equals": [
                                "@int(outputs('Add_a_key_column_to_a_table:_Add_the_current_column_name')['statusCode'])",
                                200
                              ]
                            },
                            {
                              "equals": [
                                "@int(outputs('Add_a_key_column_to_a_table:_Add_the_current_column_name')['statusCode'])",
                                409
                              ]
                            }
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "0e3060c2-734c-4d9a-98f3-84246143c8c1"
                        },
                        "type": "If",
                        "description": "outputs('Add_a_key_column_to_a_table:_Add_the_current_column_name')['statusCode']"
                      },
                      "Set_variable:_Current_Column_Name_=_Current_Item": {
                        "runAfter": {},
                        "metadata": {
                          "operationMetadataId": "1eb5b855-b7e5-438c-a4ca-892f9f2ea24c"
                        },
                        "type": "SetVariable",
                        "inputs": {
                          "name": "Current Column Name",
                          "value": "@{items('Apply_to_each:_Column_in_Columns_(Input_of_Required_Columns)')}"
                        }
                      },
                      "Add_a_key_column_to_a_table:_Add_the_current_column_name": {
                        "runAfter": {
                          "Set_variable:_Current_Column_Name_=_Current_Item": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "66cae148-c5c0-40ed-8e86-65195e783071",
                          "tableId": "@trim(variables('Table Name'))"
                        },
                        "type": "OpenApiConnection",
                        "inputs": {
                          "host": {
                            "connectionName": "shared_excelonlinebusiness",
                            "operationId": "CreateIdColumn",
                            "apiId": "/providers/Microsoft.PowerApps/apis/shared_excelonlinebusiness"
                          },
                          "parameters": {
                            "source": "me",
                            "drive": "b!nuSvKpLRikaqjcYcJ1Y9_sYDHGllwJpBu8upwX1MNGwmguHn2bveTLbY3nz98PGD",
                            "file": "@variables('File ID')",
                            "table": "@trim(variables('Table Name'))",
                            "idColumn": "@variables('Current Column Name')"
                          },
                          "authentication": {
                            "type": "Raw",
                            "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                          },
                          "retryPolicy": {
                            "type": "none"
                          }
                        },
                        "description": "trim(variables('Table Name'))"
                      },
                      "Compose:_Preview_Status_Code": {
                        "runAfter": {
                          "Add_a_key_column_to_a_table:_Add_the_current_column_name": [
                            "Succeeded",
                            "TimedOut",
                            "Failed",
                            "Skipped"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "f8e482d2-dc5d-4e46-b471-06facec271e7"
                        },
                        "type": "Compose",
                        "inputs": "@outputs('Add_a_key_column_to_a_table:_Add_the_current_column_name')['statusCode']"
                      }
                    },
                    "runAfter": {
                      "Compose:_Table_is_empty,_cannot_check_columns": [
                        "Succeeded"
                      ]
                    },
                    "metadata": {
                      "operationMetadataId": "93935fe7-586f-43b2-9aa3-f76e063a9851"
                    },
                    "type": "Foreach"
                  }
                }
              },
              "expression": {
                "or": [
                  {
                    "equals": [
                      "@int(outputs('Get_Excel_Table_Columns')?['Body']?['status'])",
                      -3
                    ]
                  },
                  {
                    "equals": [
                      "@int(outputs('Get_Excel_Table_Columns')?['Body']?['status'])",
                      -5
                    ]
                  }
                ]
              },
              "metadata": {
                "operationMetadataId": "cd22767a-cfd8-4191-b6aa-8cce5b9ecf3e"
              },
              "type": "If"
            }
          },
          "runAfter": {
            "Scope:_Create_Temp_Reference_File": [
              "Succeeded"
            ]
          },
          "expression": {
            "equals": [
              "@variables('Status Code')",
              0
            ]
          },
          "metadata": {
            "operationMetadataId": "6323441c-c4a2-4cc1-a4e1-095ddcb1aa3f"
          },
          "type": "If"
        },
        "Scope:_Get_Contents_and_Delete_Ref_File": {
          "actions": {
            "Condition:_Status_Code_==_0,_then_get_new_content": {
              "actions": {
                "Get_file_content:_Get_Temp_Content": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "f516d33a-fb9c-446f-806f-8dc9c6cf4b4b"
                  },
                  "type": "OpenApiConnection",
                  "inputs": {
                    "host": {
                      "connectionName": "shared_onedriveforbusiness_1",
                      "operationId": "GetFileContent",
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_onedriveforbusiness"
                    },
                    "parameters": {
                      "id": "@variables('File ID')",
                      "inferContentType": true
                    },
                    "authentication": {
                      "type": "Raw",
                      "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                    }
                  }
                },
                "Set_variable:_File": {
                  "runAfter": {
                    "Get_file_content:_Get_Temp_Content": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "d3037fde-32c8-4367-852a-c8bb52b5a2c0"
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "File",
                    "value": "@{dataUri(outputs('Get_file_content:_Get_Temp_Content')?['body'])}"
                  },
                  "description": "dataUri(outputs('Get_file_content:_Get_Temp_Content')?['body'])"
                }
              },
              "runAfter": {},
              "expression": {
                "or": [
                  {
                    "equals": [
                      "@variables('Status Code')",
                      0
                    ]
                  },
                  {
                    "equals": [
                      "@variables('Status Code')",
                      -5
                    ]
                  }
                ]
              },
              "metadata": {
                "operationMetadataId": "2b7bea13-5a12-4256-91b6-159b378052f7"
              },
              "type": "If",
              "description": "0 is success, -5 is modified but may not be as expected"
            },
            "Condition:_Status_Code_is_not_-1,_-6,-4_then_delete_temp_file": {
              "actions": {
                "Delete_file:_Temp_File": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "a0053491-d4ba-44f4-bcb0-c88a02693fd9"
                  },
                  "type": "OpenApiConnection",
                  "inputs": {
                    "host": {
                      "connectionName": "shared_onedriveforbusiness_1",
                      "operationId": "DeleteFile",
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_onedriveforbusiness"
                    },
                    "parameters": {
                      "id": "@variables('File ID')"
                    },
                    "authentication": {
                      "type": "Raw",
                      "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                    }
                  }
                }
              },
              "runAfter": {
                "Condition:_Status_Code_==_0,_then_get_new_content": [
                  "Succeeded"
                ]
              },
              "expression": {
                "and": [
                  {
                    "not": {
                      "equals": [
                        "@variables('Status Code')",
                        -1
                      ]
                    }
                  },
                  {
                    "not": {
                      "equals": [
                        "@variables('Status Code')",
                        -6
                      ]
                    }
                  },
                  {
                    "not": {
                      "equals": [
                        "@variables('Status Code')",
                        -4
                      ]
                    }
                  }
                ]
              },
              "metadata": {
                "operationMetadataId": "8273247b-2b9a-4f25-8e1a-e6aed1be4f29"
              },
              "type": "If",
              "description": "For status Code -1,-4,-6 the flow would have errored before a temp file could be created"
            }
          },
          "runAfter": {
            "Delay:_Wait_for_SYnc": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "fe3c6b24-5a76-4970-9e04-858358dd0e1c"
          },
          "type": "Scope"
        },
        "Condition:_Data_Uri_is_invalid,_create_a_default_excel_file": {
          "actions": {
            "Set_variable:_File_Data_Uri_=_empty_excel_file": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "41f985ce-f3be-4e1b-ae5c-630b1a4fd31d"
              },
              "type": "SetVariable",
              "inputs": {
                "name": "File Data Uri",
                "value": "@{variables('Default Data Uri')}"
              }
            },
            "Set_variable;_File_=_File_Data_Uri": {
              "runAfter": {
                "Set_variable:_File_Data_Uri_=_empty_excel_file": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "ec7467b0-c3a6-4449-b0d5-6b6a9af8016a"
              },
              "type": "SetVariable",
              "inputs": {
                "name": "File",
                "value": "@variables('File Data Uri')"
              }
            }
          },
          "runAfter": {
            "Condition:_Get_Table_Columns_Succeded": [
              "Succeeded"
            ]
          },
          "expression": {
            "equals": [
              "@int(outputs('Get_Excel_Table_Columns')?['Body']?['status'])",
              -5
            ]
          },
          "metadata": {
            "operationMetadataId": "4278a428-5a46-402f-b905-66f8fb03952c"
          },
          "type": "If"
        },
        "Set_variable:_Trigger_-_File_Content_DataUri": {
          "runAfter": {
            "Initialize_variable:_Trigger_-_File_Content_DataUri": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "668aaa08-184a-4587-a8c9-c0889a8f77b4"
          },
          "type": "SetVariable",
          "inputs": {
            "name": "File Data Uri",
            "value": "@triggerBody()?['text_3']"
          },
          "description": "try set trigger, but since it is optional value may be null"
        },
        "Delay:_Wait_for_SYnc": {
          "runAfter": {
            "Condition:_Validate_Table_if_Status_Code_is_0": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "5f2133c6-78d5-42f4-803c-a1f0f4ddf6e1"
          },
          "type": "Wait",
          "inputs": {
            "interval": {
              "count": 1,
              "unit": "Minute"
            }
          }
        },
        "Initialize_variable:_Default_Data_Uri": {
          "runAfter": {
            "Initialize_variable:_Temp_String": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "a7cab2b8-78d6-4081-aa9b-59e4c6dc66f8"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Default Data Uri",
                "type": "string",
                "value": "data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,"
              }
            ]
          }
        },
        "Run_a_Child_Flow": {
          "runAfter": {
            "Compose:_DEFINITION": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "878ec6b3-4d1b-4b5a-a41e-c2c883543b12"
          },
          "type": "Workflow",
          "inputs": {
            "host": {
              "workflowReferenceName": "d2d25316-5409-ee11-8f6e-000d3a0a1cb3"
            }
          }
        }
      }
    },
    "templateName": ""
  },
  "schemaVersion": "1.0.0.0"
}